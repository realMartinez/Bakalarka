{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\Documents\\\\React\\\\viterbivisualizer\\\\src\\\\TrellisGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrellisGraph = ({\n  nodes,\n  links\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const width = 800;\n    const height = 400;\n    svg.attr(\"width\", width).attr(\"height\", height);\n\n    // Clear previous render\n    svg.selectAll(\"*\").remove();\n\n    // Define scales for positioning nodes\n    const xScale = d3.scalePoint().domain(nodes.map(node => node.time)).range([0, width]);\n    const yScale = d3.scalePoint().domain([\"00\", \"01\", \"10\", \"11\"]) // Define binary states in order\n    .range([0, height]);\n\n    // Draw links (transitions between states)\n    svg.selectAll(\"line\").data(links).join(\"line\").attr(\"x1\", d => xScale(d.source.time)).attr(\"y1\", d => yScale(d.source.state)).attr(\"x2\", d => xScale(d.target.time)).attr(\"y2\", d => yScale(d.target.state)).attr(\"stroke\", \"black\").attr(\"stroke-width\", 1);\n\n    // Draw nodes (states at each time step)\n    svg.selectAll(\"circle\").data(nodes).join(\"circle\").attr(\"cx\", d => xScale(d.time)).attr(\"cy\", d => yScale(d.state)).attr(\"r\", 5).attr(\"fill\", \"blue\");\n\n    // Add labels to nodes\n    svg.selectAll(\"text\").data(nodes).join(\"text\").attr(\"x\", d => xScale(d.time)).attr(\"y\", d => yScale(d.state) - 10).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"10px\").text(d => d.state); // Display binary state label\n  }, [nodes, links]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n};\n_s(TrellisGraph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = TrellisGraph;\nexport default TrellisGraph;\nvar _c;\n$RefreshReg$(_c, \"TrellisGraph\");","map":{"version":3,"names":["React","useEffect","useRef","d3","jsxDEV","_jsxDEV","TrellisGraph","nodes","links","_s","svgRef","svg","select","current","width","height","attr","selectAll","remove","xScale","scalePoint","domain","map","node","time","range","yScale","data","join","d","source","state","target","text","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Martin/Documents/React/viterbivisualizer/src/TrellisGraph.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst TrellisGraph = ({ nodes, links }) => {\r\n  const svgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const svg = d3.select(svgRef.current);\r\n    const width = 800;\r\n    const height = 400;\r\n\r\n    svg.attr(\"width\", width).attr(\"height\", height);\r\n\r\n    // Clear previous render\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    // Define scales for positioning nodes\r\n    const xScale = d3\r\n      .scalePoint()\r\n      .domain(nodes.map((node) => node.time))\r\n      .range([0, width]);\r\n\r\n    const yScale = d3\r\n      .scalePoint()\r\n      .domain([\"00\", \"01\", \"10\", \"11\"]) // Define binary states in order\r\n      .range([0, height]);\r\n\r\n    // Draw links (transitions between states)\r\n    svg\r\n      .selectAll(\"line\")\r\n      .data(links)\r\n      .join(\"line\")\r\n      .attr(\"x1\", (d) => xScale(d.source.time))\r\n      .attr(\"y1\", (d) => yScale(d.source.state))\r\n      .attr(\"x2\", (d) => xScale(d.target.time))\r\n      .attr(\"y2\", (d) => yScale(d.target.state))\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"stroke-width\", 1);\r\n\r\n    // Draw nodes (states at each time step)\r\n    svg\r\n      .selectAll(\"circle\")\r\n      .data(nodes)\r\n      .join(\"circle\")\r\n      .attr(\"cx\", (d) => xScale(d.time))\r\n      .attr(\"cy\", (d) => yScale(d.state))\r\n      .attr(\"r\", 5)\r\n      .attr(\"fill\", \"blue\");\r\n\r\n    // Add labels to nodes\r\n    svg\r\n      .selectAll(\"text\")\r\n      .data(nodes)\r\n      .join(\"text\")\r\n      .attr(\"x\", (d) => xScale(d.time))\r\n      .attr(\"y\", (d) => yScale(d.state) - 10)\r\n      .attr(\"text-anchor\", \"middle\")\r\n      .attr(\"font-size\", \"10px\")\r\n      .text((d) => d.state); // Display binary state label\r\n  }, [nodes, links]);\r\n\r\n  return <svg ref={svgRef}></svg>;\r\n};\r\n\r\nexport default TrellisGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}